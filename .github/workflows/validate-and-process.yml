name: Validate and Process EvalAI Challenge

on:
  push: {}
  pull_request:
    types: [opened, synchronize, reopened, edited]
    branches:
      - 'challenge'

permissions:
  contents: read
  issues: write

jobs:
  detect-and-validate-challenge-branch:
    runs-on: ubuntu-latest
    outputs:
      is_challenge_branch: ${{ steps.branch-check.outputs.is_challenge_branch }}
      challenge_branch: ${{ steps.branch-check.outputs.challenge_branch }}
      branch_suffix: ${{ steps.branch-check.outputs.branch_suffix }}
    steps:
      - name: Detect and validate challenge branch
        id: branch-check
        run: |
          # Get the actual branch name
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BRANCH="${{ github.head_ref }}"
          else
            BRANCH="${{ github.ref_name }}"
          fi
          
          echo "üîç Analyzing branch: $BRANCH"
          echo "challenge_branch=$BRANCH" >> $GITHUB_OUTPUT
          
          # Check if this is a challenge branch
          if [[ "$BRANCH" =~ ^challenge(-.*)?$ ]]; then
            echo "is_challenge_branch=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Valid challenge branch detected: $BRANCH"
            
            # Extract branch suffix for versioning
            if [[ "$BRANCH" =~ ^challenge-(.+)$ ]]; then
              SUFFIX="${BASH_REMATCH[1]}"
              echo "branch_suffix=$SUFFIX" >> $GITHUB_OUTPUT
              echo "üìã Branch suffix: $SUFFIX"
            else
              echo "branch_suffix=main" >> $GITHUB_OUTPUT
              echo "üìã Main challenge branch (no suffix)"
            fi
          else
            echo "is_challenge_branch=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è Not a challenge branch: $BRANCH"
            echo "‚è≠Ô∏è Challenge processing will be skipped"
          fi

  validate-host-config:
    runs-on: ubuntu-latest
    outputs:
      is_valid: ${{ steps.validate.outputs.is_valid }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate host_config.json
        id: validate
        run: |
          echo "is_valid=true" >> $GITHUB_OUTPUT
          echo "" > validation_error.log

          if ! [ -f "github/host_config.json" ]; then
            echo "‚ùå host_config.json not found in github/ directory" | tee -a validation_error.log
            echo "is_valid=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          TOKEN=$(jq -r '.token' github/host_config.json)
          TEAM_PK=$(jq -r '.team_pk' github/host_config.json)
          HOST_URL=$(jq -r '.evalai_host_url' github/host_config.json)

          if [[ -z "$TOKEN" || "$TOKEN" == "<evalai_user_auth_token>" ]]; then
            echo "‚ùå Invalid or missing token" | tee -a validation_error.log
            echo "is_valid=false" >> $GITHUB_OUTPUT
          fi

          if [[ -z "$TEAM_PK" || "$TEAM_PK" == "<host_team_pk>" ]]; then
            echo "‚ùå Invalid or missing team_pk" | tee -a validation_error.log
            echo "is_valid=false" >> $GITHUB_OUTPUT
          fi

          if [[ -z "$HOST_URL" || "$HOST_URL" == "<evalai_host_url>" ]]; then
            echo "‚ùå Invalid or missing evalai_host_url" | tee -a validation_error.log
            echo "is_valid=false" >> $GITHUB_OUTPUT
          fi

      - name: Create issue if invalid
        if: steps.validate.outputs.is_valid == 'false'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "host_config.json validation failed"
          content-filepath: validation_error.log
          labels: |
            bug
            config

      - name: Fail job if invalid
        if: steps.validate.outputs.is_valid == 'false'
        run: |
          echo "‚ùå host_config.json validation failed. See issue for details."
          exit 1


  process-evalai-challenge:
    needs: validate-host-config
    if: needs.validate-host-config.outputs.is_valid == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout challenge branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.21

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f github/requirements.txt ]; then pip install -r github/requirements.txt; fi

      - name: Validate challenge
        run: |
          python3 github/challenge_processing_script.py ${GITHUB_REF#refs/heads/}
        env:
          IS_VALIDATION: 'True'
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}

      - name: Create or update challenge
        run: |
          python3 github/challenge_processing_script.py ${GITHUB_REF#refs/heads/}
        if: ${{ github.event_name == 'push' && success() }}
        env:
          IS_VALIDATION: 'False'
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
