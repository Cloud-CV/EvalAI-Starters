name: Validate and Process EvalAI Challenge

on:
  push:
    branches:
      - challenge

permissions:
  contents: read
  issues: write

jobs:
  validate-host-config:
    runs-on: ubuntu-latest
    outputs:
      is_valid: ${{ steps.validate.outputs.is_valid }}
      is_localhost: ${{ steps.validate.outputs.is_localhost }}
      host_url: ${{ steps.validate.outputs.host_url }}
      requires_self_hosted: ${{ steps.validate.outputs.requires_self_hosted }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate host_config.json
        id: validate
        run: |
          echo "is_valid=true" >> $GITHUB_OUTPUT
          echo "is_localhost=false" >> $GITHUB_OUTPUT
          echo "requires_self_hosted=false" >> $GITHUB_OUTPUT
          echo "" > validation_error.log

          if ! [ -f "github/host_config.json" ]; then
            echo "‚ùå host_config.json not found in github/ directory" | tee -a validation_error.log
            echo "is_valid=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          TOKEN=$(jq -r '.token' github/host_config.json)
          TEAM_PK=$(jq -r '.team_pk' github/host_config.json)
          HOST_URL=$(jq -r '.evalai_host_url' github/host_config.json)

          echo "host_url=$HOST_URL" >> $GITHUB_OUTPUT

          # Enhanced localhost detection (includes Docker networking hosts)
          if [[ "$HOST_URL" == *"127.0.0.1"* ]] || [[ "$HOST_URL" == *"localhost"* ]] || [[ "$HOST_URL" == *"0.0.0.0"* ]] || [[ "$HOST_URL" == *"host.docker.internal"* ]]; then
            echo "is_localhost=true" >> $GITHUB_OUTPUT
            echo "requires_self_hosted=true" >> $GITHUB_OUTPUT
            echo "üè† Localhost/Docker networking server detected: $HOST_URL"
            echo "ü§ñ Self-hosted runner required for local development"
            echo "üê≥ Docker networking will be used for container-to-host communication"
            echo ""
            echo "üìã Requirements for local challenge creation:"
            echo "   ‚úÖ Self-hosted GitHub Actions runner must be configured"
            echo "   ‚úÖ EvalAI server must be running at: $HOST_URL"
            echo "   ‚úÖ Network connectivity between runner and server"
            echo ""
            echo "‚ö†Ô∏è  Note: GitHub hosted runners cannot connect to localhost"
            echo "‚ö†Ô∏è  This workflow will use your self-hosted runner instead"
          fi

          # Validate required fields
          if [[ -z "$TOKEN" || "$TOKEN" == "<evalai_user_auth_token>" ]]; then
            echo "‚ùå Invalid or missing token in host_config.json" | tee -a validation_error.log
            echo "üí° Please replace <evalai_user_auth_token> with your actual EvalAI token" | tee -a validation_error.log
            echo "is_valid=false" >> $GITHUB_OUTPUT
          fi

          if [[ -z "$TEAM_PK" || "$TEAM_PK" == "<host_team_pk>" ]]; then
            echo "‚ùå Invalid or missing team_pk in host_config.json" | tee -a validation_error.log
            echo "üí° Please replace <host_team_pk> with your actual team primary key" | tee -a validation_error.log
            echo "is_valid=false" >> $GITHUB_OUTPUT
          fi

          if [[ -z "$HOST_URL" || "$HOST_URL" == "<evalai_host_url>" ]]; then
            echo "‚ùå Invalid or missing evalai_host_url in host_config.json" | tee -a validation_error.log
            echo "üí° Please replace <evalai_host_url> with your EvalAI server URL" | tee -a validation_error.log
            echo "is_valid=false" >> $GITHUB_OUTPUT
          fi

      - name: Create issue if invalid
        if: steps.validate.outputs.is_valid == 'false'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "‚ùå host_config.json validation failed"
          content-filepath: validation_error.log
          labels: |
            bug
            config
            self-hosted

      - name: Fail job if invalid
        if: steps.validate.outputs.is_valid == 'false'
        run: |
          echo "‚ùå host_config.json validation failed. See issue for details."
          exit 1

  check-self-hosted-requirements:
    needs: validate-host-config
    if: needs.validate-host-config.outputs.requires_self_hosted == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Self-hosted runner requirements check
        run: |
          echo "üè† LOCAL DEVELOPMENT MODE DETECTED"
          echo "=================================="
          echo ""
          echo "üìã To proceed with local challenge creation, ensure you have:"
          echo ""
          echo "1Ô∏è‚É£  Self-hosted GitHub Actions runner configured:"
          echo "   ‚Ä¢ Download runner from: https://github.com/${{ github.repository }}/settings/actions/runners"
          echo "   ‚Ä¢ Install and configure on your local machine"
          echo "   ‚Ä¢ Start the runner service"
          echo ""
          echo "2Ô∏è‚É£  Docker installed and running:"
          echo "   ‚Ä¢ Docker Engine must be available on the runner machine"
          echo "   ‚Ä¢ Will use 'docker run' commands with python:3.9-slim (architecture independent)"
          echo "   ‚Ä¢ This solves compatibility issues with ARM64/macOS architectures"
          echo "   ‚Ä¢ Note: GitHub Actions containers only work on Linux, so we use docker run instead"
          echo ""
          echo "3Ô∏è‚É£  EvalAI server running via Docker Compose:"
          echo "   ‚Ä¢ Run: cd /path/to/evalai && docker-compose up --build"
          echo "   ‚Ä¢ Server URL: ${{ needs.validate-host-config.outputs.host_url }}"
          echo "   ‚Ä¢ Django API: localhost:8000, Node.js frontend: localhost:8888"
          echo "   ‚Ä¢ Ensure it's accessible from Docker containers"
          echo ""
          echo "4Ô∏è‚É£  Network connectivity:"
          echo "   ‚Ä¢ Docker container can reach your EvalAI server"
          echo "   ‚Ä¢ No firewall blocking connections"
          echo "   ‚Ä¢ Consider using host.docker.internal for macOS/Windows"
          echo ""
          echo "‚ö†Ô∏è  This job will continue on your self-hosted runner with Docker..."
          echo "‚ö†Ô∏è  If you don't have a self-hosted runner with Docker, the next job will fail"

  process-evalai-challenge:
    needs: [validate-host-config, check-self-hosted-requirements]
    if: |
      always() && 
      needs.validate-host-config.outputs.is_valid == 'true' &&
      (needs.check-self-hosted-requirements.result == 'success' || needs.check-self-hosted-requirements.result == 'skipped')
    runs-on: ${{ needs.validate-host-config.outputs.requires_self_hosted == 'true' && 'self-hosted' || 'ubuntu-latest' }}
    
    # Note: GitHub Actions containers only work on Linux runners
    # For macOS self-hosted runners, we'll use Docker run commands instead
    
    steps:
      - name: Checkout challenge branch
        uses: actions/checkout@v3
        with:
          ref: challenge

      - name: Set up Python (GitHub-hosted only)
        if: needs.validate-host-config.outputs.requires_self_hosted != 'true'
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.21

      - name: Prepare Docker environment (Self-hosted only)
        if: needs.validate-host-config.outputs.requires_self_hosted == 'true'
        run: |
          echo "üê≥ PREPARING DOCKER ENVIRONMENT"
          echo "==============================="
          echo "Pulling Python 3.9 Docker image..."
          docker pull python:3.9-slim
          echo "‚úÖ Docker image ready"

      - name: Install dependencies (GitHub-hosted)
        if: needs.validate-host-config.outputs.requires_self_hosted != 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f github/requirements.txt ]; then 
            echo "üì¶ Installing dependencies from github/requirements.txt"
            pip install -r github/requirements.txt
          else
            echo "‚ö†Ô∏è  No requirements.txt found in github/ directory"
          fi

      - name: Install dependencies (Self-hosted with Docker)
        if: needs.validate-host-config.outputs.requires_self_hosted == 'true'
        run: |
          echo "üì¶ Installing dependencies in Docker container"
          docker run --rm \
            --add-host host.docker.internal:host-gateway \
            -v "$(pwd):/workspace" \
            -w /workspace \
            python:3.9-slim bash -c "
            pip install --upgrade pip
            if [ -f github/requirements.txt ]; then 
              echo 'üì¶ Installing dependencies from github/requirements.txt'
              pip install -r github/requirements.txt
            else
              echo '‚ö†Ô∏è  No requirements.txt found in github/ directory'
            fi
          "
          echo "‚úÖ Dependencies installed in Docker"

      - name: Validate challenge configuration (GitHub-hosted)
        if: needs.validate-host-config.outputs.requires_self_hosted != 'true'
        run: |
          echo "üîç VALIDATING CHALLENGE CONFIGURATION"
          echo "====================================="
          python3 github/challenge_processing_script.py
        env:
          IS_VALIDATION: 'True'
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}

      - name: Validate challenge configuration (Self-hosted with Docker)
        if: needs.validate-host-config.outputs.requires_self_hosted == 'true'
        run: |
          echo "üîç VALIDATING CHALLENGE CONFIGURATION (Docker)"
          echo "==============================================="
          docker run --rm \
            --add-host host.docker.internal:host-gateway \
            -v "$(pwd):/workspace" \
            -w /workspace \
            -e IS_VALIDATION='True' \
            -e GITHUB_CONTEXT='${{ toJson(github) }}' \
            -e GITHUB_REPOSITORY='${{ github.repository }}' \
            -e GITHUB_AUTH_TOKEN='${{ secrets.AUTH_TOKEN }}' \
            python:3.9-slim \
            bash -c "
              pip install -r github/requirements.txt && 
              python3 github/challenge_processing_script.py
            "

      - name: Create or update challenge (GitHub-hosted)
        if: success() && needs.validate-host-config.outputs.requires_self_hosted != 'true'
        run: |
          echo "üöÄ CREATING/UPDATING CHALLENGE"
          echo "=============================="
          python3 github/challenge_processing_script.py
        env:
          IS_VALIDATION: 'False'
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}

      - name: Create or update challenge (Self-hosted with Docker)
        if: success() && needs.validate-host-config.outputs.requires_self_hosted == 'true'
        run: |
          echo "üöÄ CREATING/UPDATING CHALLENGE (Docker)"
          echo "========================================"
          docker run --rm \
            --add-host host.docker.internal:host-gateway \
            -v "$(pwd):/workspace" \
            -w /workspace \
            -e IS_VALIDATION='False' \
            -e GITHUB_CONTEXT='${{ toJson(github) }}' \
            -e GITHUB_AUTH_TOKEN='${{ secrets.AUTH_TOKEN }}' \
            python:3.9-slim \
            bash -c "
              pip install -r github/requirements.txt && 
              python3 github/challenge_processing_script.py
            "
