name: Validate and Process EvalAI Challenge

on:
  push:
    branches:
      - challenge

permissions:
  contents: read
  issues: write

jobs:
  validate-host-config:
    runs-on: ubuntu-latest
    outputs:
      is_valid: ${{ steps.validate.outputs.is_valid }}
      is_localhost: ${{ steps.validate.outputs.is_localhost }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate host_config.json
        id: validate
        run: |
          echo "is_valid=true" >> $GITHUB_OUTPUT
          echo "is_localhost=false" >> $GITHUB_OUTPUT
          echo "" > validation_error.log

          if ! [ -f "github/host_config.json" ]; then
            echo "‚ùå host_config.json not found in github/ directory" | tee -a validation_error.log
            echo "is_valid=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          TOKEN=$(jq -r '.token' github/host_config.json)
          TEAM_PK=$(jq -r '.team_pk' github/host_config.json)
          HOST_URL=$(jq -r '.evalai_host_url' github/host_config.json)

          # Check if localhost is being used
          if [[ "$HOST_URL" == *"127.0.0.1"* ]] || [[ "$HOST_URL" == *"localhost"* ]] || [[ "$HOST_URL" == *"0.0.0.0"* ]]; then
            echo "is_localhost=true" >> $GITHUB_OUTPUT
            echo "üè† Localhost server detected: $HOST_URL"
            echo "‚ö†Ô∏è  Note: GitHub Actions cannot connect to your local machine."
            echo "‚ö†Ô∏è  This workflow will validate the configuration but cannot test server connectivity."
            echo "‚ö†Ô∏è  Make sure your localhost server is running when testing locally."
          fi

          if [[ -z "$TOKEN" || "$TOKEN" == "<evalai_user_auth_token>" ]]; then
            echo "‚ùå Invalid or missing token" | tee -a validation_error.log
            echo "is_valid=false" >> $GITHUB_OUTPUT
          fi

          if [[ -z "$TEAM_PK" || "$TEAM_PK" == "<host_team_pk>" ]]; then
            echo "‚ùå Invalid or missing team_pk" | tee -a validation_error.log
            echo "is_valid=false" >> $GITHUB_OUTPUT
          fi

          if [[ -z "$HOST_URL" || "$HOST_URL" == "<evalai_host_url>" ]]; then
            echo "‚ùå Invalid or missing evalai_host_url" | tee -a validation_error.log
            echo "is_valid=false" >> $GITHUB_OUTPUT
          fi

      - name: Create issue if invalid
        if: steps.validate.outputs.is_valid == 'false'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "host_config.json validation failed"
          content-filepath: validation_error.log
          labels: |
            bug
            config

      - name: Fail job if invalid
        if: steps.validate.outputs.is_valid == 'false'
        run: |
          echo "‚ùå host_config.json validation failed. See issue for details."
          exit 1


  process-evalai-challenge:
    needs: validate-host-config
    if: needs.validate-host-config.outputs.is_valid == 'true'
    runs-on: ${{ needs.validate-host-config.outputs.is_localhost == 'true' && 'self-hosted' || 'ubuntu-latest' }}
    steps:
      - name: Checkout challenge branch
        uses: actions/checkout@v3
        with:
          ref: challenge

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.21

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f github/requirements.txt ]; then pip install -r github/requirements.txt; fi

      - name: Check Docker Compose Services
        if: needs.validate-host-config.outputs.is_localhost == 'true'
        run: |
          echo "üè† LOCALHOST DETECTED - Checking Docker Compose Services"
          echo "üìã Checking if EvalAI server is running on localhost:8888..."
          
          # Check if the server is accessible
          if curl -s --connect-timeout 5 http://localhost:8888/ > /dev/null 2>&1; then
            echo "‚úÖ EvalAI server is accessible at localhost:8888"
          else
            echo "‚ùå EvalAI server is not accessible at localhost:8888"
            echo ""
            echo "üìù Make sure your EvalAI server is running with docker-compose:"
            echo "   docker-compose up -d"
            echo ""
            echo "üîç Check running containers:"
            docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep -E "(evalai|8888)" || echo "No EvalAI containers found"
            echo ""
            echo "üö® This workflow will fail if the server is not running"
          fi

      - name: Validate challenge
        run: |
          python3 github/challenge_processing_script.py
        env:
          IS_VALIDATION: 'True'
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}

      - name: Create or update challenge
        run: |
          python3 github/challenge_processing_script.py
        if: ${{ success() }}
        env:
          IS_VALIDATION: 'False'
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
